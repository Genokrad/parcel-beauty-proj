{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,qG,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCA5F,MAAMC,EAAQC,GAAMC,SAASC,cAAcF,GAIrCG,EAAcC,IAClBC,QAAQC,IAAIF,GACC,UAATA,IACFG,IACAR,EAAM,iBAAiBS,UAAUC,OAAO,oBAE7B,cAATL,IACFM,EAAc,2BACdX,EAAM,2CAA2CS,UAAUC,OACzD,oBAGS,YAATL,IACFC,QAAQC,IAAIF,GACZM,EAAc,oCACdX,EAAM,yCAAyCS,UAAUC,OACvD,mB,EAOAC,EAAgBC,IACpB,MAAMC,EAAYb,EAAMY,GAElBE,EAAcD,EAAUE,aAAa,cAEvCD,IAAgB,GAAGE,EAAAvB,eACrBoB,EAAUI,aAAa,aAAc,GAAGD,EAAAvB,iBAC/BqB,IAAgB,GAAGE,EAAAvB,gBAC5BoB,EAAUI,aAAa,aAAc,GAAGD,EAAAvB,gBAExCoB,EAAUI,aAAa,aAAc,GAAGD,EAAAvB,gBAAoB,EAI1De,EAAY,KAChB,MAAMU,EAAgBhB,SAASC,cAAc,0BACvCW,EAAcI,EAAcH,aAAa,cAE3CD,IAAgB,GAAGE,EAAAvB,eACrByB,EAAcD,aAAa,aAAc,GAAGD,EAAAvB,YACnCqB,IAAgB,GAAGE,EAAAvB,WAC5ByB,EAAcD,aAAa,aAAc,GAAGD,EAAAvB,gBAE5CyB,EAAcD,aAAa,aAAc,GAAGD,EAAAvB,WAAe,EAI/DO,EAAM,sBAAsBmB,iBAAiB,SAAS,IACpDf,EAAY,WAGdJ,EAAM,yBAAyBmB,iBAAiB,SAAS,IACvDf,EAAY,eAGdJ,EAAM,mBAAmBmB,iBAAiB,SAAS,IACjDf,EAAY","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-21e500289b4f1132.js","node_modules/@parcel/runtime-js/lib/runtime-643dfc921be0cb37.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"contacts.45f2f334.js\\\",\\\"lp5u4\\\":\\\"sprite.435c5729.svg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lp5u4\")).toString();","const getEl = el => document.querySelector(el);\n\nimport sprite from './images/sprite.svg';\n\nconst toggleClass = mark => {\n  console.log(mark);\n  if (mark === 'modal') {\n    toggleSvg();\n    getEl('.header-modal').classList.toggle('visually-hidden');\n  }\n  if (mark === 'servicess') {\n    toggleChevron('.header-modal__icon use');\n    getEl('.header-modal__services-list--servicess').classList.toggle(\n      'visually-hidden'\n    );\n  }\n  if (mark === 'doctors') {\n    console.log(mark);\n    toggleChevron('.header-modal__icon--doctors use');\n    getEl('.header-modal__services-list--doctors').classList.toggle(\n      'visually-hidden'\n    );\n  }\n};\n\n// header-modal__services-list\n\nconst toggleChevron = selector => {\n  const servicess = getEl(selector);\n\n  const currentHref = servicess.getAttribute('xlink:href');\n\n  if (currentHref === `${sprite}#chevronUp`) {\n    servicess.setAttribute('xlink:href', `${sprite}#chevronBot`);\n  } else if (currentHref === `${sprite}#chevronBot`) {\n    servicess.setAttribute('xlink:href', `${sprite}#chevronUp`);\n  } else {\n    servicess.setAttribute('xlink:href', `${sprite}#chevronBot`);\n  }\n};\n\nconst toggleSvg = () => {\n  const hamburgerIcon = document.querySelector('.header__hamburger use');\n  const currentHref = hamburgerIcon.getAttribute('xlink:href');\n\n  if (currentHref === `${sprite}#hamburger`) {\n    hamburgerIcon.setAttribute('xlink:href', `${sprite}#cross`);\n  } else if (currentHref === `${sprite}#cross`) {\n    hamburgerIcon.setAttribute('xlink:href', `${sprite}#hamburger`);\n  } else {\n    hamburgerIcon.setAttribute('xlink:href', `${sprite}#cross`);\n  }\n};\n\ngetEl('.header__hamburger').addEventListener('click', () =>\n  toggleClass('modal')\n);\n\ngetEl('.button--header-modal').addEventListener('click', () =>\n  toggleClass('servicess')\n);\n\ngetEl('#button-doctors').addEventListener('click', () =>\n  toggleClass('doctors')\n);\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$a4212a039eccdb43$exports","URL","resolve","import","meta","url","toString","$1f0dc3b9307be026$var$getEl","el","document","querySelector","$1f0dc3b9307be026$var$toggleClass","mark","console","log","$1f0dc3b9307be026$var$toggleSvg","classList","toggle","$1f0dc3b9307be026$var$toggleChevron","selector","servicess","currentHref","getAttribute","$parcel$interopDefault","setAttribute","hamburgerIcon","addEventListener"],"version":3,"file":"contacts.45f2f334.js.map"}